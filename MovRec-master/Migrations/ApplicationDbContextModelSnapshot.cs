// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovRec.data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MovRec.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MovRec.Models.Genres", b =>
                {
                    b.Property<int>("movie_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("movie_id"));

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("movie_id");

                    b.ToTable("genres");
                });

            modelBuilder.Entity("MovRec.Models.Movie", b =>
                {
                    b.Property<int>("movie_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("movie_id"));

                    b.Property<bool?>("adult")
                        .HasColumnType("boolean");

                    b.Property<double?>("avg_rate")
                        .HasColumnType("double precision");

                    b.Property<string>("casts")
                        .HasColumnType("text");

                    b.Property<string>("director")
                        .HasColumnType("text");

                    b.Property<string>("movie_homepage")
                        .HasColumnType("text");

                    b.Property<string>("over_review")
                        .HasColumnType("text");

                    b.Property<string>("production_companies")
                        .HasColumnType("text");

                    b.Property<string>("production_countries")
                        .HasColumnType("text");

                    b.Property<DateOnly>("release_date")
                        .HasColumnType("date");

                    b.Property<int?>("runtime")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("movie_id");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("MovRec.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<DateOnly>("birth_date")
                        .HasColumnType("date");

                    b.Property<DateTime>("create_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gener")
                        .HasColumnType("text");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
